import numpy as np
from numpy import linalg as LA

from math import sqrt, floor
import random

import matplotlib.pyplot as plt
from PIL import Image

import cv2
import pyAprilTag

# Calibration Matrix from Task 3
# AprilCalib log 2
# CalibRig::mode=2d
# @ Sun Nov  3 21:18:57 2019

from numpy import array
U=array([[2816.438720703125, 2597.07568359375, 2375.109375, 2150.498779296875, 1207.137329101563, 1451.309326171875, 1689.761840820313, 1922.474609375, 2826.8193359375, 2606.09033203125, 2383.040771484375, 2157.81494140625, 1929.438232421875, 1696.225219726563, 1211.032348632813, 1456.765258789063, 2837.992431640625, 2616.05712890625, 2391.7802734375, 2165.52978515625, 1936.2373046875, 1702.047973632813, 1461.433959960938, 1214.276000976563, 2850.055419921875, 2627.13134765625, 2401.544677734375, 2173.796630859375, 1942.871337890625, 1707.0791015625, 1465.036499023438, 1216.729858398438, 2862.66552734375, 2639.017333984375, 2412.223388671875, 2182.541015625, 1949.46923828125, 1711.550415039063, 1467.962036132813, 1218.658813476563],
       [1035.465942382813, 1037.578735351563, 1039.794677734375, 1041.74609375, 1042.689453125, 1042.848876953125, 1043.1025390625, 1042.859619140625, 1258.50927734375, 1262.191040039063, 1265.981323242188, 1269.592895507813, 1272.755004882813, 1275.471557617188, 1280.3798828125, 1277.887084960938, 1483.570434570313, 1488.48193359375, 1493.434936523438, 1498.455444335938, 1503.635620117188, 1509.08203125, 1514.589599609375, 1520.39111328125, 1711.186889648438, 1717.338500976563, 1723.517333984375, 1730.012817382813, 1737.233642578125, 1745.336547851563, 1754.135986328125, 1763.214965820313, 1941.654907226563, 1949.641235351563, 1957.556396484375, 1965.94482421875, 1975.379760742188, 1986.034423828125, 1997.4892578125, 2009.280639648438]], dtype='float64');
Xw=array([[1499.504516601563, 1299.504516601563, 1099.504516601563, 899.5044555664063, 99.50446319580078, 299.5044555664063, 499.5044555664063, 699.5044555664063, 1499.504516601563, 1299.504516601563, 1099.504516601563, 899.5044555664063, 699.5044555664063, 499.5044555664063, 99.50446319580078, 299.5044555664063, 1499.504516601563, 1299.504516601563, 1099.504516601563, 899.5044555664063, 699.5044555664063, 499.5044555664063, 299.5044555664063, 99.50446319580078, 1499.504516601563, 1299.504516601563, 1099.504516601563, 899.5044555664063, 699.5044555664063, 499.5044555664063, 299.5044555664063, 99.50446319580078, 1499.504516601563, 1299.504516601563, 1099.504516601563, 899.5044555664063, 699.5044555664063, 499.5044555664063, 299.5044555664063, 99.50446319580078],
       [99.50446319580078, 99.50446319580078, 99.50446319580078, 99.50446319580078, 99.50446319580078, 99.50446319580078, 99.50446319580078, 99.50446319580078, 299.5044555664063, 299.5044555664063, 299.5044555664063, 299.5044555664063, 299.5044555664063, 299.5044555664063, 299.5044555664063, 299.5044555664063, 499.5044555664063, 499.5044555664063, 499.5044555664063, 499.5044555664063, 499.5044555664063, 499.5044555664063, 499.5044555664063, 499.5044555664063, 699.5044555664063, 699.5044555664063, 699.5044555664063, 699.5044555664063, 699.5044555664063, 699.5044555664063, 699.5044555664063, 699.5044555664063, 899.5044555664063, 899.5044555664063, 899.5044555664063, 899.5044555664063, 899.5044555664063, 899.5044555664063, 899.5044555664063, 899.5044555664063],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], dtype='float64');
# After LM:
K=array([[3140.725141179792, 0, 2019.646055960577],
       [0, 3143.365672324941, 1484.523845830987],
       [0, 0, 1]], dtype='float64');
distCoeffs=array([0.2397028544561952,
       -1.111686031746706,
       0.0007304268963748716,
       0.0004529208082846044,
       0], dtype='float64');

def main():
    image_path = 'img/task_4/Task4_01.png';
    img = cv2.imread(image_path, 0);
    ids, corners, centers, Hs = pyAprilTag.find(img);

    H_matrix = np.array(Hs[0]);
    print(f"H = \n{H_matrix}");

    tag_corners = corners[0];
    print(f"\nCorner Image Coordinates = \n{tag_corners}\n");

    # corner_0 = tag_corners[0];
    # corner_0 = np.append(corner_0,1);
    # corner_0_w = np.matmul(LA.inv(H_matrix),np.array(corner_0))
    # print(corner_0_w/corner_0_w[2])

    world_coordinates = np.array([[-1, -1, 1],
    [1, -1, 1],
    [1, 1, 1],
    [-1, 1, 1]]);

    image_coordinates = np.matmul(H_matrix, world_coordinates.transpose()).transpose();

    for i in range(0,len(image_coordinates)):
        image_coordinates[i] = image_coordinates[i] / image_coordinates[i][2];
    print(image_coordinates)

    im = np.array(Image.open(image_path), dtype=np.uint8);
    fig,ax = plt.subplots(1);

    # Display the image
    ax.imshow(im);

    ax.scatter(tag_corners[:,0], tag_corners[:,1], color='red');
    ax.scatter(image_coordinates[:,0], image_coordinates[:,1], color='green');
    plt.show();



if __name__ == "__main__":
    main()
